# SAI Altermundi.net - Complete server configuration with Dashboard integration
# This configuration should be deployed to the public proxy server (88.207.86.56)

server {
    listen 80;
    server_name sai.altermundi.net;

    # Redirect all HTTP requests to HTTPS
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name sai.altermundi.net;

    # SSL Certificate and Key from Let's Encrypt
    ssl_certificate /etc/letsencrypt/live/sai.altermundi.net/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/sai.altermundi.net/privkey.pem;

    # SSL Settings for security
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH;
    ssl_session_timeout 1d;
    ssl_session_cache shared:MozSSL:10m;

    # HSTS (HTTP Strict Transport Security)
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # =================================================================
    # SAI DASHBOARD INTEGRATION (NEW)  
    # Served via SSH reverse tunnels from local server (remote ports 3000/3001)
    # =================================================================

    # Dashboard - Exact redirect for trailing slash
    location = /dashboard {
        return 301 $scheme://$server_name/dashboard/;
    }

    # Dashboard API - Backend routing 
    # Proxies to local server port 3001 via SSH tunnel
    location /dashboard/api/ {
        proxy_pass http://127.0.0.1:3001;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_buffering off;
        
        # SSE support for real-time updates
        proxy_set_header Connection '';
        proxy_cache_bypass 1;
        proxy_no_cache 1;
        
        # Timeouts for API requests
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 300s;
    }
    
    # Special handling for SSE events endpoint - needs longer timeouts
    location /dashboard/api/events {
        proxy_pass http://127.0.0.1:3001;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # SSE-specific configuration
        proxy_buffering off;
        proxy_cache off;
        proxy_set_header Connection '';
        proxy_set_header Cache-Control 'no-cache';
        proxy_set_header X-Accel-Buffering 'no';
        
        # Critical nginx SSE headers (research findings)
        add_header X-Accel-Buffering no;
        
        # Critical: Disable compression for SSE streaming
        gzip off;
        
        # Extended timeouts for SSE connections (research findings)
        proxy_connect_timeout 30s;
        proxy_send_timeout 24h;
        proxy_read_timeout 24h;
        proxy_ignore_client_abort on;
        
        # CORS for SSE
        add_header Access-Control-Allow-Origin $http_origin always;
        add_header Access-Control-Allow-Credentials 'true' always;
        add_header Access-Control-Allow-Methods 'GET, OPTIONS' always;
        add_header Access-Control-Allow-Headers 'Authorization, Cache-Control' always;
        
        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin $http_origin;
            add_header Access-Control-Allow-Credentials 'true';
            add_header Access-Control-Allow-Methods 'GET, OPTIONS';
            add_header Access-Control-Allow-Headers 'Authorization, Cache-Control';
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 204;
        }
    }

    # Dashboard Frontend - Static files via local nginx
    # Proxies to local nginx on port 80 via SSH reverse tunnel (remote port 3000)
    location /dashboard/ {
        proxy_pass http://127.0.0.1:3000/dashboard/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_buffering off;
        
        # Cache static assets but not HTML
        location ~* /dashboard/.*\.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            proxy_pass http://127.0.0.1:3000;
            proxy_cache_valid 200 1y;
            add_header Cache-Control "public, immutable";
        }
    }

    # =================================================================
    # EXISTING SAI PROXY API (PRESERVED)
    # =================================================================
    location /api/ {
        proxy_pass http://127.0.0.1:8003;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;
    }

    # =================================================================
    # BASE COMPANY WEBPAGE (PRESERVED)
    # =================================================================
    location / {
        root /var/www/sai;
        index index.html;
    }

    # =================================================================
    # SECURITY HEADERS (ENHANCED)
    # =================================================================
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Referrer-Policy "strict-origin-when-cross-origin";
}


# =================================================================
# SSH TUNNEL CONFIGURATION NOTES
# =================================================================
#
# The dashboard uses SSH REVERSE tunnels from the local server
# to create remote port bindings on the public proxy server:
#
# From local server (this machine) these services run:
# - tunnel-dashboard.service: ssh -R 3000:localhost:80 user@public-proxy
# - tunnel-dashboard-api.service: ssh -R 3001:localhost:3001 user@public-proxy
#
# This creates remote bindings on the public proxy (88.207.86.56):
# - localhost:3000 (on proxy) -> localhost:80 (on local server via reverse tunnel)  
# - localhost:3001 (on proxy) -> localhost:3001 (on local server via reverse tunnel)
#
# Or using systemd service for persistent tunnels:
# See: /root/sai-dashboard/systemd/sai-dashboard-tunnel.service
#
# Port mapping:
# - 3000: Frontend static files (via local nginx on port 80, reverse tunnel)
# - 3001: Backend API (Node.js/Express, direct reverse tunnel)
# - 8003: Existing SAI Proxy API (preserved)
#
# Dashboard URLs:
# - https://sai.altermundi.net/dashboard/     → Frontend
# - https://sai.altermundi.net/dashboard/api/ → Backend API
# - https://sai.altermundi.net/api/           → Existing SAI Proxy API
# - https://sai.altermundi.net/               → Company webpage