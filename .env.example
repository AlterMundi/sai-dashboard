# SAI Dashboard Environment Configuration
# Copy this file to .env and fill in your actual values

# =================================================================
# DATABASE CONFIGURATION (n8n PostgreSQL)
# =================================================================

# Full database connection string - CHANGE THE PASSWORD!
DATABASE_URL=postgresql://sai_dashboard_readonly:CHANGE_THIS_PASSWORD@localhost:5432/n8n

# Individual database connection parameters (alternative to DATABASE_URL)
DB_HOST=localhost
DB_PORT=5432
DB_NAME=n8n
DB_USER=sai_dashboard_readonly
DB_PASSWORD=CHANGE_THIS_PASSWORD

# Connection pool settings
DB_MAX_CONNECTIONS=5
DB_IDLE_TIMEOUT=30000
DB_CONNECTION_TIMEOUT=2000

# =================================================================
# APPLICATION CONFIGURATION
# =================================================================

# Environment
NODE_ENV=development

# Server ports (for SSH tunnel architecture)
# In production, these bind to localhost only for tunneling
API_PORT=3001
FRONTEND_PORT=3000

# Base paths for subpath deployment (/dashboard/)
BASE_PATH=/dashboard
API_BASE_PATH=/dashboard/api
VITE_BASE_PATH=/dashboard/

# CORS configuration
# Development: http://localhost:3000
# Production: https://n8n.altermundi.net
CORS_ORIGIN=http://localhost:3000
CORS_CREDENTIALS=true

# =================================================================
# SAI DASHBOARD SPECIFIC SETTINGS
# =================================================================

# Target workflow name (do not change unless workflow is renamed)
SAI_WORKFLOW_NAME=Sai-webhook-upload-image+Ollama-analisys+telegram-sendphoto

# Pagination and limits
DEFAULT_PAGE_SIZE=50
MAX_PAGE_SIZE=200
MAX_DAYS_LOOKBACK=365

# Filesystem cache configuration (primary cache method)
CACHE_PATH=/mnt/raid1/n8n-backup/images
ENABLE_THUMBNAIL_GENERATION=true
THUMBNAIL_SIZE=200
THUMBNAIL_QUALITY=70

# Image processing
MAX_IMAGE_SIZE=5242880  # 5MB in bytes
SUPPORTED_IMAGE_FORMATS=jpeg,png,webp
IMAGE_CACHE_TTL=86400   # 24 hours (filesystem cache)

# API response caching (metadata only, images cached on filesystem)
CACHE_TTL=300           # 5 minutes in seconds
ENABLE_RESPONSE_CACHE=true

# =================================================================
# SECURITY CONFIGURATION
# =================================================================

# Dashboard Password Authentication (REQUIRED for public access)
DASHBOARD_PASSWORD=CHANGE_THIS_SECURE_PASSWORD_2025

# Session management
SESSION_DURATION=86400  # 24 hours in seconds
SESSION_SECRET=your-super-secret-session-key-change-this-in-production

# Request rate limiting
RATE_LIMIT_WINDOW_MS=60000  # 1 minute
RATE_LIMIT_MAX_REQUESTS=60  # requests per window (reduced for public)
RATE_LIMIT_BURST_MAX=10     # burst requests (reduced)
RATE_LIMIT_BURST_WINDOW=10000 # 10 seconds

# Login rate limiting (strict)
LOGIN_RATE_LIMIT_WINDOW=900000  # 15 minutes
LOGIN_RATE_LIMIT_MAX=5          # 5 attempts per 15 min

# Security headers
ENABLE_HELMET=true
TRUST_PROXY=true
ENFORCE_HTTPS=true

# CORS (for public deployment)
CORS_ORIGIN=https://your-domain.com

# =================================================================
# LOGGING CONFIGURATION  
# =================================================================

# Log level (error, warn, info, debug)
LOG_LEVEL=info

# Log format (json, simple)
LOG_FORMAT=simple

# Log file path (optional, logs to console if not set)
LOG_FILE_PATH=

# Enable database query logging
LOG_DATABASE_QUERIES=false

# =================================================================
# EXTERNAL SERVICES (for future enhancements)
# =================================================================

# Redis for caching (FUTURE USE - currently using filesystem)
# REDIS_URL=redis://localhost:6379
# REDIS_TTL=300

# Webhook notifications (optional)
WEBHOOK_URL=
WEBHOOK_SECRET=

# =================================================================
# DEVELOPMENT SETTINGS
# =================================================================

# Enable development features
ENABLE_DEV_TOOLS=true

# Hot reload
ENABLE_HOT_RELOAD=true

# API documentation
ENABLE_API_DOCS=true

# Sample data generation
ENABLE_SAMPLE_DATA=false

# SSE (Server-Sent Events) configuration
SSE_HEARTBEAT_INTERVAL=30000  # 30 seconds
SSE_MAX_CLIENTS=100
SSE_TIMEOUT=300000           # 5 minutes

# =================================================================
# PRODUCTION OVERRIDES
# =================================================================

# Production-specific settings
# Uncomment and modify for production deployment

# NODE_ENV=production
# LOG_LEVEL=warn
# LOG_FORMAT=json
# ENABLE_DEV_TOOLS=false
# CACHE_TTL=900  # 15 minutes
# RATE_LIMIT_MAX_REQUESTS=200

# Production database (if different)
# DATABASE_URL=postgresql://sai_user:secure_password@prod-db:5432/n8n

# SSL/TLS configuration
# SSL_KEY_PATH=/path/to/ssl/key.pem
# SSL_CERT_PATH=/path/to/ssl/cert.pem

# =================================================================
# MONITORING AND OBSERVABILITY  
# =================================================================

# Health check configuration
HEALTH_CHECK_TIMEOUT=5000 # 5 seconds
ENABLE_SYSTEM_METRICS=true

# Performance monitoring
ENABLE_PERFORMANCE_MONITORING=true
PERFORMANCE_SAMPLE_RATE=0.1 # 10% sampling

# Error reporting (optional)
SENTRY_DSN=
SENTRY_ENVIRONMENT=development

# =================================================================
# FEATURE FLAGS
# =================================================================

# Enable/disable specific features
FEATURE_IMAGE_PROCESSING=true
FEATURE_REAL_TIME_UPDATES=false
FEATURE_EXPORT_FUNCTIONALITY=true
FEATURE_ADVANCED_ANALYTICS=false
FEATURE_USER_AUTHENTICATION=false

# =================================================================
# DEPLOYMENT ARCHITECTURE (SSH Tunnel)
# =================================================================

# Public server configuration
PUBLIC_SERVER_HOST=88.207.86.56
PUBLIC_URL=https://n8n.altermundi.net/dashboard

# SSH Tunnel configuration (for systemd service)
TUNNEL_USER=tunnel
TUNNEL_KEY_PATH=/home/tunnel-user/.ssh/tunnel_key
TUNNEL_PORTS=5678:3001:3000

# =================================================================
# DOCKER CONFIGURATION
# =================================================================

# Docker-specific overrides
# Used when running in containers

# For production with SSH tunnels, bind to localhost only:
# BIND_ADDRESS=127.0.0.1

# For development, bind to all interfaces:
# BIND_ADDRESS=0.0.0.0

# Container health check
# HEALTHCHECK_INTERVAL=30s
# HEALTHCHECK_TIMEOUT=10s
# HEALTHCHECK_RETRIES=3

# =================================================================
# BACKUP AND MAINTENANCE
# =================================================================

# Automated cleanup settings
AUTO_CLEANUP_ENABLED=false
CLEANUP_RETENTION_DAYS=90
CLEANUP_SCHEDULE=0 2 * * 0  # Sunday 2 AM

# Backup integration
BACKUP_ENABLED=false
BACKUP_SCHEDULE=0 3 * * 0   # Sunday 3 AM
BACKUP_RETENTION_WEEKS=4